image: python:3.11

cache:
  paths:
    - .cache/pip

stages:
  - test
  - deploy
  - release

variables:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_CACHE_DIR: "1"

.default_before_script: &default_before_script
  before_script:
    - apt-get update && apt-get install -y build-essential libcairo2 libcairo2-dev libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev libxml2 libxml2-dev libxslt1-dev libjpeg-dev zlib1g-dev shared-mime-info fonts-liberation
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
    - pip install --use-pep517 -U pdoc3

# Execute tests and generate coverage reports
test:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - echo $CI_COMMIT_BRANCH
    - coverage run -m pytest tests/
    - coverage report
    - coverage xml
    - pdoc3 --html --output-dir /tmp/ --skip-errors .
    - cd ..
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  #  image: python:3.10-bullseye
  image: continuumio/miniconda3
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  <<: *default_before_script

# deploy the documentation to GitLab Pages
pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  image: continuumio/miniconda3
  allow_failure: false
  script:
    - cd src/
    - pdoc3 --html --output-dir ../public/ --skip-errors .
    - mv ../public/src/* ../public/
    - rm -r ../public/src
  artifacts:
    paths:
      - public
  <<: *default_before_script

# create a release when a tag is created
release:
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/' # A specific tag with 'vX.Y.Z-release' pattern is created
  script:
    - echo "running release_job for $CI_COMMIT_TAG""
  release:
    name: "v${CI_COMMIT_TAG}"
    description: "$CI_COMMIT_TAG_MESSAGE"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
