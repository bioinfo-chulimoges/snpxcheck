image: python:3.11

cache:
  paths:
    - .cache/pip

stages:
  - test
  - deploy
  - release

variables:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_CACHE_DIR: "1"

.default_before_script: &default_before_script
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install pytest pytest-cov

# Execute tests and generate coverage reports
test:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - pytest --cov=utils --cov=app --cov-report=term-missing --cov-report=xml
  artifacts:
    when: always
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - junit.xml
      - coverage.xml
  <<: *default_before_script

# deploy the documentation to GitLab Pages
pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  image: continuumio/miniconda3
  allow_failure: false
  script:
    - pip install --use-pep517 -U pdoc3
    - cd src/
    - pdoc3 --html --output-dir ../public/ --skip-errors .
    - mv ../public/src/* ../public/
    - rm -r ../public/src
  artifacts:
    paths:
      - public
  <<: *default_before_script

# create a release when a tag is created
release:
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/' # A specific tag with 'vX.Y.Z-release' pattern is created
  script:
    - echo "running release_job for $CI_COMMIT_TAG""
  release:
    name: "v${CI_COMMIT_TAG}"
    description: "$CI_COMMIT_TAG_MESSAGE"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
